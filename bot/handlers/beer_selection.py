# bot/handlers/beer_selection.py
import logging
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.core.database import get_async_session
from bot.repositories.user_repo import UserRepository
from bot.repositories.beer_repo import BeerRepository
from bot.core.schemas import BeerChoiceCreate
from bot.core.models import BeerTypeEnum

logger = logging.getLogger(__name__)
router = Router()


@router.message(Command("beer"))
async def beer_selection_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –≤—ã–±–æ—Ä–∞ –ø–∏–≤–∞"""
    try:
        async for session in get_async_session():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user = await UserRepository.get_user_by_telegram_id(
                session, message.from_user.id
            )

            if not user:
                await message.answer(
                    "‚ùå –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
                )
                return

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ø–∏–≤–∞
            builder = InlineKeyboardBuilder()
            builder.add(
                types.InlineKeyboardButton(text="üç∫ Lager", callback_data="beer_lager")
            )
            builder.add(
                types.InlineKeyboardButton(
                    text="üçª Hand of God", callback_data="beer_hand_of_god"
                )
            )
            builder.adjust(2)

            await message.answer(
                f"üç∫ –ü—Ä–∏–≤–µ—Ç, {user.name}!\n" "–ö–∞–∫–æ–µ –ø–∏–≤–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å —Å–µ–≥–æ–¥–Ω—è?",
                reply_markup=builder.as_markup(),
            )

    except Exception as e:
        logger.error(f"Error in beer selection handler: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


@router.callback_query(lambda c: c.data.startswith("beer_"))
async def beer_choice_callback(callback_query: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–∏–≤–∞"""
    try:
        await callback_query.answer()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–∏–≤–∞
        beer_type_map = {
            "beer_lager": BeerTypeEnum.LAGER,
            "beer_hand_of_god": BeerTypeEnum.HAND_OF_GOD,
        }

        beer_type = beer_type_map.get(callback_query.data)
        if not beer_type:
            await callback_query.message.edit_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–∏–≤–∞!")
            return

        async for session in get_async_session():
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await UserRepository.get_user_by_telegram_id(
                session, callback_query.from_user.id
            )

            if not user:
                await callback_query.message.edit_text(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
                )
                return

            # –°–æ–∑–¥–∞–µ–º –≤—ã–±–æ—Ä –ø–∏–≤–∞
            choice_data = BeerChoiceCreate(user_id=user.id, beer_type=beer_type)

            choice = await BeerRepository.create_choice(session, choice_data)

            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_stats = await BeerRepository.get_user_beer_stats(session, user.id)

            beer_names = {
                BeerTypeEnum.LAGER.value: "üç∫ Lager",
                BeerTypeEnum.HAND_OF_GOD.value: "üçª Hand of God",
            }

            selected_beer = beer_names[beer_type.value]

            stats_text = "üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            for beer_name, count in user_stats.items():
                stats_text += f"{beer_names.get(beer_name, beer_name)}: {count}\n"

            await callback_query.message.edit_text(
                f"‚úÖ –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –¢—ã –≤—ã–±—Ä–∞–ª {selected_beer}\n\n"
                f"{stats_text}\n"
                "üîÑ /beer - –≤—ã–±—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑\n"
                "üìä /stats - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
                "üë§ /profile - –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
            )

    except Exception as e:
        logger.error(f"Error in beer choice callback: {e}")
        await callback_query.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
